{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-applicationautoscaling": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.ApplicationAutoScaling",
          "packageId": "Amazon.CDK.AWS.ApplicationAutoScaling",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "applicationautoscaling",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.applicationautoscaling"
        },
        "js": {
          "npm": "@aws-cdk/aws-applicationautoscaling"
        },
        "python": {
          "distName": "aws-cdk.aws-applicationautoscaling",
          "module": "aws_cdk.aws_applicationautoscaling"
        }
      },
      "version": "1.4.0"
    },
    "@aws-cdk/aws-certificatemanager": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.CertificateManager",
          "packageId": "Amazon.CDK.AWS.CertificateManager",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "certificatemanager",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.certificatemanager"
        },
        "js": {
          "npm": "@aws-cdk/aws-certificatemanager"
        },
        "python": {
          "distName": "aws-cdk.aws-certificatemanager",
          "module": "aws_cdk.aws_certificatemanager"
        }
      },
      "version": "1.4.0"
    },
    "@aws-cdk/aws-ec2": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.EC2",
          "packageId": "Amazon.CDK.AWS.EC2",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "ec2",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.ec2"
        },
        "js": {
          "npm": "@aws-cdk/aws-ec2"
        },
        "python": {
          "distName": "aws-cdk.aws-ec2",
          "module": "aws_cdk.aws_ec2"
        }
      },
      "version": "1.4.0"
    },
    "@aws-cdk/aws-ecs": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.ECS",
          "packageId": "Amazon.CDK.AWS.ECS",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "ecs",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.ecs"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecs"
        },
        "python": {
          "distName": "aws-cdk.aws-ecs",
          "module": "aws_cdk.aws_ecs"
        }
      },
      "version": "1.4.0"
    },
    "@aws-cdk/aws-elasticloadbalancingv2": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.ElasticLoadBalancingV2",
          "packageId": "Amazon.CDK.AWS.ElasticLoadBalancingV2",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "elasticloadbalancingv2",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.elasticloadbalancingv2"
        },
        "js": {
          "npm": "@aws-cdk/aws-elasticloadbalancingv2"
        },
        "python": {
          "distName": "aws-cdk.aws-elasticloadbalancingv2",
          "module": "aws_cdk.aws_elasticloadbalancingv2"
        }
      },
      "version": "1.4.0"
    },
    "@aws-cdk/aws-events": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        },
        "python": {
          "distName": "aws-cdk.aws-events",
          "module": "aws_cdk.aws_events"
        }
      },
      "version": "1.4.0"
    },
    "@aws-cdk/aws-events-targets": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.Events.Targets",
          "packageId": "Amazon.CDK.AWS.Events.Targets",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "events-targets",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.events.targets"
        },
        "js": {
          "npm": "@aws-cdk/aws-events-targets"
        },
        "python": {
          "distName": "aws-cdk.aws-events-targets",
          "module": "aws_cdk.aws_events_targets"
        }
      },
      "version": "1.4.0"
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      },
      "version": "1.4.0"
    },
    "@aws-cdk/aws-route53": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.Route53",
          "packageId": "Amazon.CDK.AWS.Route53",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "route53",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.route53"
        },
        "js": {
          "npm": "@aws-cdk/aws-route53"
        },
        "python": {
          "distName": "aws-cdk.aws-route53",
          "module": "aws_cdk.aws_route53"
        }
      },
      "version": "1.4.0"
    },
    "@aws-cdk/aws-route53-targets": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.Route53.Targets",
          "packageId": "Amazon.CDK.AWS.Route53.Targets",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "route53-targets",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.route53.targets"
        },
        "js": {
          "npm": "@aws-cdk/aws-route53-targets"
        },
        "python": {
          "distName": "aws-cdk.aws-route53-targets",
          "module": "aws_cdk.aws_route53_targets"
        }
      },
      "version": "1.4.0"
    },
    "@aws-cdk/aws-sqs": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.SQS",
          "packageId": "Amazon.CDK.AWS.SQS",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "sqs",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.sqs"
        },
        "js": {
          "npm": "@aws-cdk/aws-sqs"
        },
        "python": {
          "distName": "aws-cdk.aws-sqs",
          "module": "aws_cdk.aws_sqs"
        }
      },
      "version": "1.4.0"
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      },
      "version": "1.4.0"
    }
  },
  "dependencyClosure": {
    "@aws-cdk/aws-apigateway": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.APIGateway",
          "packageId": "Amazon.CDK.AWS.APIGateway",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "apigateway",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.apigateway"
        },
        "js": {
          "npm": "@aws-cdk/aws-apigateway"
        },
        "python": {
          "distName": "aws-cdk.aws-apigateway",
          "module": "aws_cdk.aws_apigateway"
        }
      },
      "version": "1.4.0"
    },
    "@aws-cdk/aws-applicationautoscaling": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.ApplicationAutoScaling",
          "packageId": "Amazon.CDK.AWS.ApplicationAutoScaling",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "applicationautoscaling",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.applicationautoscaling"
        },
        "js": {
          "npm": "@aws-cdk/aws-applicationautoscaling"
        },
        "python": {
          "distName": "aws-cdk.aws-applicationautoscaling",
          "module": "aws_cdk.aws_applicationautoscaling"
        }
      },
      "version": "1.4.0"
    },
    "@aws-cdk/aws-autoscaling": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.AutoScaling",
          "packageId": "Amazon.CDK.AWS.AutoScaling",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.autoscaling"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling"
        },
        "python": {
          "distName": "aws-cdk.aws-autoscaling",
          "module": "aws_cdk.aws_autoscaling"
        }
      },
      "version": "1.4.0"
    },
    "@aws-cdk/aws-autoscaling-common": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.AutoScaling.Common",
          "packageId": "Amazon.CDK.AWS.AutoScaling.Common",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling-common",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.autoscaling.common"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling-common"
        },
        "python": {
          "distName": "aws-cdk.aws-autoscaling-common",
          "module": "aws_cdk.aws_autoscaling_common"
        }
      },
      "version": "1.4.0"
    },
    "@aws-cdk/aws-autoscaling-hooktargets": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.AutoScaling.HookTargets",
          "packageId": "Amazon.CDK.AWS.AutoScaling.HookTargets",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling-hooktargets",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.autoscaling.hooktargets"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling-hooktargets"
        },
        "python": {
          "distName": "aws-cdk.aws-autoscaling-hooktargets",
          "module": "aws_cdk.aws_autoscaling_hooktargets"
        }
      },
      "version": "1.4.0"
    },
    "@aws-cdk/aws-certificatemanager": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.CertificateManager",
          "packageId": "Amazon.CDK.AWS.CertificateManager",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "certificatemanager",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.certificatemanager"
        },
        "js": {
          "npm": "@aws-cdk/aws-certificatemanager"
        },
        "python": {
          "distName": "aws-cdk.aws-certificatemanager",
          "module": "aws_cdk.aws_certificatemanager"
        }
      },
      "version": "1.4.0"
    },
    "@aws-cdk/aws-cloudformation": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.CloudFormation",
          "packageId": "Amazon.CDK.AWS.CloudFormation",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "cloudformation",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.cloudformation"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudformation"
        },
        "python": {
          "distName": "aws-cdk.aws-cloudformation",
          "module": "aws_cdk.aws_cloudformation"
        }
      },
      "version": "1.4.0"
    },
    "@aws-cdk/aws-cloudfront": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.CloudFront",
          "packageId": "Amazon.CDK.AWS.CloudFront",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "cloudfront",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.cloudfront"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudfront"
        },
        "python": {
          "distName": "aws-cdk.aws-cloudfront",
          "module": "aws_cdk.aws_cloudfront"
        }
      },
      "version": "1.4.0"
    },
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      },
      "version": "1.4.0"
    },
    "@aws-cdk/aws-codebuild": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.CodeBuild",
          "packageId": "Amazon.CDK.AWS.CodeBuild",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "codebuild",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.codebuild"
        },
        "js": {
          "npm": "@aws-cdk/aws-codebuild"
        },
        "python": {
          "distName": "aws-cdk.aws-codebuild",
          "module": "aws_cdk.aws_codebuild"
        }
      },
      "version": "1.4.0"
    },
    "@aws-cdk/aws-codepipeline": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.CodePipeline",
          "packageId": "Amazon.CDK.AWS.CodePipeline",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "codepipeline",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.codepipeline"
        },
        "js": {
          "npm": "@aws-cdk/aws-codepipeline"
        },
        "python": {
          "distName": "aws-cdk.aws-codepipeline",
          "module": "aws_cdk.aws_codepipeline"
        }
      },
      "version": "1.4.0"
    },
    "@aws-cdk/aws-ec2": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.EC2",
          "packageId": "Amazon.CDK.AWS.EC2",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "ec2",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.ec2"
        },
        "js": {
          "npm": "@aws-cdk/aws-ec2"
        },
        "python": {
          "distName": "aws-cdk.aws-ec2",
          "module": "aws_cdk.aws_ec2"
        }
      },
      "version": "1.4.0"
    },
    "@aws-cdk/aws-ecr": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.ECR",
          "packageId": "Amazon.CDK.AWS.ECR",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "ecr",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.ecr"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr"
        },
        "python": {
          "distName": "aws-cdk.aws-ecr",
          "module": "aws_cdk.aws_ecr"
        }
      },
      "version": "1.4.0"
    },
    "@aws-cdk/aws-ecr-assets": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.Ecr.Assets",
          "packageId": "Amazon.CDK.ECR.Assets",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "ecr-assets",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.ecr.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr-assets"
        },
        "python": {
          "distName": "aws-cdk.aws-ecr-assets",
          "module": "aws_cdk.aws_ecr_assets"
        }
      },
      "version": "1.4.0"
    },
    "@aws-cdk/aws-ecs": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.ECS",
          "packageId": "Amazon.CDK.AWS.ECS",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "ecs",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.ecs"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecs"
        },
        "python": {
          "distName": "aws-cdk.aws-ecs",
          "module": "aws_cdk.aws_ecs"
        }
      },
      "version": "1.4.0"
    },
    "@aws-cdk/aws-elasticloadbalancing": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.ElasticLoadBalancing",
          "packageId": "Amazon.CDK.AWS.ElasticLoadBalancing",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "elasticloadbalancing",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.elasticloadbalancing"
        },
        "js": {
          "npm": "@aws-cdk/aws-elasticloadbalancing"
        },
        "python": {
          "distName": "aws-cdk.aws-elasticloadbalancing",
          "module": "aws_cdk.aws_elasticloadbalancing"
        }
      },
      "version": "1.4.0"
    },
    "@aws-cdk/aws-elasticloadbalancingv2": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.ElasticLoadBalancingV2",
          "packageId": "Amazon.CDK.AWS.ElasticLoadBalancingV2",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "elasticloadbalancingv2",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.elasticloadbalancingv2"
        },
        "js": {
          "npm": "@aws-cdk/aws-elasticloadbalancingv2"
        },
        "python": {
          "distName": "aws-cdk.aws-elasticloadbalancingv2",
          "module": "aws_cdk.aws_elasticloadbalancingv2"
        }
      },
      "version": "1.4.0"
    },
    "@aws-cdk/aws-events": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        },
        "python": {
          "distName": "aws-cdk.aws-events",
          "module": "aws_cdk.aws_events"
        }
      },
      "version": "1.4.0"
    },
    "@aws-cdk/aws-events-targets": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.Events.Targets",
          "packageId": "Amazon.CDK.AWS.Events.Targets",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "events-targets",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.events.targets"
        },
        "js": {
          "npm": "@aws-cdk/aws-events-targets"
        },
        "python": {
          "distName": "aws-cdk.aws-events-targets",
          "module": "aws_cdk.aws_events_targets"
        }
      },
      "version": "1.4.0"
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      },
      "version": "1.4.0"
    },
    "@aws-cdk/aws-kms": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.KMS",
          "packageId": "Amazon.CDK.AWS.KMS",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "kms",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        },
        "python": {
          "distName": "aws-cdk.aws-kms",
          "module": "aws_cdk.aws_kms"
        }
      },
      "version": "1.4.0"
    },
    "@aws-cdk/aws-lambda": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.Lambda",
          "packageId": "Amazon.CDK.AWS.Lambda",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "lambda",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.lambda"
        },
        "js": {
          "npm": "@aws-cdk/aws-lambda"
        },
        "python": {
          "distName": "aws-cdk.aws-lambda",
          "module": "aws_cdk.aws_lambda"
        }
      },
      "version": "1.4.0"
    },
    "@aws-cdk/aws-logs": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.Logs",
          "packageId": "Amazon.CDK.AWS.Logs",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "logs",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.logs"
        },
        "js": {
          "npm": "@aws-cdk/aws-logs"
        },
        "python": {
          "distName": "aws-cdk.aws-logs",
          "module": "aws_cdk.aws_logs"
        }
      },
      "version": "1.4.0"
    },
    "@aws-cdk/aws-route53": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.Route53",
          "packageId": "Amazon.CDK.AWS.Route53",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "route53",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.route53"
        },
        "js": {
          "npm": "@aws-cdk/aws-route53"
        },
        "python": {
          "distName": "aws-cdk.aws-route53",
          "module": "aws_cdk.aws_route53"
        }
      },
      "version": "1.4.0"
    },
    "@aws-cdk/aws-route53-targets": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.Route53.Targets",
          "packageId": "Amazon.CDK.AWS.Route53.Targets",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "route53-targets",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.route53.targets"
        },
        "js": {
          "npm": "@aws-cdk/aws-route53-targets"
        },
        "python": {
          "distName": "aws-cdk.aws-route53-targets",
          "module": "aws_cdk.aws_route53_targets"
        }
      },
      "version": "1.4.0"
    },
    "@aws-cdk/aws-s3": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.S3",
          "packageId": "Amazon.CDK.AWS.S3",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "s3",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.s3"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3"
        },
        "python": {
          "distName": "aws-cdk.aws-s3",
          "module": "aws_cdk.aws_s3"
        }
      },
      "version": "1.4.0"
    },
    "@aws-cdk/aws-secretsmanager": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.SecretsManager",
          "packageId": "Amazon.CDK.AWS.SecretsManager",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "secretsmanager",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.secretsmanager"
        },
        "js": {
          "npm": "@aws-cdk/aws-secretsmanager"
        },
        "python": {
          "distName": "aws-cdk.aws-secretsmanager",
          "module": "aws_cdk.aws_secretsmanager"
        }
      },
      "version": "1.4.0"
    },
    "@aws-cdk/aws-servicediscovery": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.ServiceDiscovery",
          "packageId": "Amazon.CDK.AWS.ServiceDiscovery",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "servicediscovery",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.servicediscovery"
        },
        "js": {
          "npm": "@aws-cdk/aws-servicediscovery"
        },
        "python": {
          "distName": "aws-cdk.aws-servicediscovery",
          "module": "aws_cdk.aws_servicediscovery"
        }
      },
      "version": "1.4.0"
    },
    "@aws-cdk/aws-sns": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.SNS",
          "packageId": "Amazon.CDK.AWS.SNS",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "sns",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.sns"
        },
        "js": {
          "npm": "@aws-cdk/aws-sns"
        },
        "python": {
          "distName": "aws-cdk.aws-sns",
          "module": "aws_cdk.aws_sns"
        }
      },
      "version": "1.4.0"
    },
    "@aws-cdk/aws-sns-subscriptions": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.SNS.Subscriptions",
          "packageId": "Amazon.CDK.AWS.SNS.Subscriptions",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "sns-subscriptions",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.sns.subscriptions"
        },
        "js": {
          "npm": "@aws-cdk/aws-sns-subscriptions"
        },
        "python": {
          "distName": "aws-cdk.aws-sns-subscriptions",
          "module": "aws_cdk.aws_sns_subscriptions"
        }
      },
      "version": "1.4.0"
    },
    "@aws-cdk/aws-sqs": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.SQS",
          "packageId": "Amazon.CDK.AWS.SQS",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "sqs",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.sqs"
        },
        "js": {
          "npm": "@aws-cdk/aws-sqs"
        },
        "python": {
          "distName": "aws-cdk.aws-sqs",
          "module": "aws_cdk.aws_sqs"
        }
      },
      "version": "1.4.0"
    },
    "@aws-cdk/aws-ssm": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.SSM",
          "packageId": "Amazon.CDK.AWS.SSM",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "ssm",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.ssm"
        },
        "js": {
          "npm": "@aws-cdk/aws-ssm"
        },
        "python": {
          "distName": "aws-cdk.aws-ssm",
          "module": "aws_cdk.aws_ssm"
        }
      },
      "version": "1.4.0"
    },
    "@aws-cdk/aws-stepfunctions": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.AWS.StepFunctions",
          "packageId": "Amazon.CDK.AWS.StepFunctions",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "stepfunctions",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.services.stepfunctions"
        },
        "js": {
          "npm": "@aws-cdk/aws-stepfunctions"
        },
        "python": {
          "distName": "aws-cdk.aws-stepfunctions",
          "module": "aws_cdk.aws_stepfunctions"
        }
      },
      "version": "1.4.0"
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      },
      "version": "1.4.0"
    },
    "@aws-cdk/custom-resources": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.CustomResources",
          "packageId": "Amazon.CDK.AWS.CustomResources",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-customresources",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.customresources"
        },
        "js": {
          "npm": "@aws-cdk/custom-resources"
        },
        "python": {
          "distName": "aws-cdk.custom-resources",
          "module": "aws_cdk.custom_resources"
        }
      },
      "version": "1.4.0"
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      },
      "version": "1.4.0"
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo",
          "signAssembly": true,
          "versionSuffix": "-devpreview"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk",
            "versionSuffix": ".DEVPREVIEW"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      },
      "version": "1.4.0"
    }
  },
  "description": "CDK Constructs for AWS ECS",
  "docs": {
    "stability": "experimental"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "0.14.3 (build 1b1062d)",
  "license": "Apache-2.0",
  "name": "@aws-cdk/aws-ecs-patterns",
  "readme": {
    "markdown": "# CDK Construct library for higher-level ECS Constructs\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![Stability: Experimental](https://img.shields.io/badge/stability-Experimental-important.svg?style=for-the-badge)\n\n> **This is a _developer preview_ (public beta) module. Releases might lack important features and might have\n> future breaking changes.**\n>\n> This API is still under active development and subject to non-backward\n> compatible changes or removal in any future version. Use of the API is not recommended in production\n> environments. Experimental APIs are not subject to the Semantic Versioning model.\n\n---\n<!--END STABILITY BANNER-->\n\nThis library provides higher-level ECS constructs which follow common architectural patterns. It contains:\n\n* Load Balanced Services\n* Queue Processing Services\n* Scheduled Tasks (cron jobs)\n\n## Load Balanced Services\n\nTo define a service that is behind a load balancer, instantiate one of the following:\n\n* `LoadBalancedEc2Service`\n\n```ts\nconst loadBalancedEcsService = new ecsPatterns.LoadBalancedEc2Service(stack, 'Service', {\n  cluster,\n  memoryLimitMiB: 1024,\n  image: ecs.ContainerImage.fromRegistry('test'),\n  desiredCount: 2,\n  environment: {\n    TEST_ENVIRONMENT_VARIABLE1: \"test environment variable 1 value\",\n    TEST_ENVIRONMENT_VARIABLE2: \"test environment variable 2 value\"\n  }\n});\n```\n\n* `LoadBalancedFargateService`\n\n```ts\nconst loadBalancedFargateService = new ecsPatterns.LoadBalancedFargateService(stack, 'Service', {\n  cluster,\n  memoryLimitMiB: 1024,\n  cpu: 512,\n  image: ecs.ContainerImage.fromRegistry(\"amazon/amazon-ecs-sample\"),\n});\n```\n\nInstead of providing a cluster you can specify a VPC and CDK will create a new ECS cluster.\nIf you deploy multiple services CDK will only create on cluster per VPC.\n\nYou can omit `cluster` and `vpc` to let CDK create a new VPC with two AZs and create a cluster inside this VPC.\n\n## Queue Processing Services\n\nTo define a service that creates a queue and reads from that queue, instantiate one of the following:\n\n* `QueueProcessingEc2Service`\n\n```ts\nconst queueProcessingEc2Service = new QueueProcessingEc2Service(stack, 'Service', {\n  cluster,\n  memoryLimitMiB: 1024,\n  image: ecs.ContainerImage.fromRegistry('test'),\n  command: [\"-c\", \"4\", \"amazon.com\"],\n  enableLogging: false,\n  desiredTaskCount: 2,\n  environment: {\n    TEST_ENVIRONMENT_VARIABLE1: \"test environment variable 1 value\",\n    TEST_ENVIRONMENT_VARIABLE2: \"test environment variable 2 value\"\n  },\n  queue,\n  maxScalingCapacity: 5\n});\n```\n\n* `QueueProcessingFargateService`\n\n```ts\nconst queueProcessingFargateService = new QueueProcessingFargateService(stack, 'Service', {\n  cluster,\n  memoryLimitMiB: 512,\n  image: ecs.ContainerImage.fromRegistry('test'),\n  command: [\"-c\", \"4\", \"amazon.com\"],\n  enableLogging: false,\n  desiredTaskCount: 2,\n  environment: {\n    TEST_ENVIRONMENT_VARIABLE1: \"test environment variable 1 value\",\n    TEST_ENVIRONMENT_VARIABLE2: \"test environment variable 2 value\"\n  },\n  queue,\n  maxScalingCapacity: 5\n});\n```\n\n## Scheduled Tasks\n\nTo define a task that runs periodically, instantiate an `ScheduledEc2Task`:\n\n\n```ts\n// Instantiate an Amazon EC2 Task to run at a scheduled interval\nconst ecsScheduledTask = new ScheduledEc2Task(this, 'ScheduledTask', {\n  cluster,\n  image: ecs.ContainerImage.fromRegistry(\"amazon/amazon-ecs-sample\"),\n  scheduleExpression: 'rate(1 minute)',\n  environment: [{ name: 'TRIGGER', value: 'CloudWatch Events' }],\n  memoryLimitMiB: 256\n});\n```\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-ecs-patterns",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "assemblyOriginatorKeyFile": "../../key.snk",
      "namespace": "Amazon.CDK.AWS.ECS.Patterns",
      "packageId": "Amazon.CDK.AWS.ECS.Patterns",
      "signAssembly": true,
      "versionSuffix": "-devpreview"
    },
    "java": {
      "maven": {
        "artifactId": "ecs-patterns",
        "groupId": "software.amazon.awscdk",
        "versionSuffix": ".DEVPREVIEW"
      },
      "package": "software.amazon.awscdk.services.ecs.patterns"
    },
    "js": {
      "npm": "@aws-cdk/aws-ecs-patterns"
    },
    "python": {
      "distName": "aws-cdk.aws-ecs-patterns",
      "module": "aws_cdk.aws_ecs_patterns"
    }
  },
  "types": {
    "@aws-cdk/aws-ecs-patterns.LoadBalancedEc2Service": {
      "assembly": "@aws-cdk/aws-ecs-patterns",
      "base": "@aws-cdk/aws-ecs-patterns.LoadBalancedServiceBase",
      "docs": {
        "stability": "experimental",
        "summary": "A single task running on an ECS cluster fronted by a load balancer."
      },
      "fqn": "@aws-cdk/aws-ecs-patterns.LoadBalancedEc2Service",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Constructs a new instance of the LoadBalancedEc2Service class."
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ecs-patterns.LoadBalancedEc2ServiceProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ecs/load-balanced-ecs-service.ts",
        "line": 54
      },
      "name": "LoadBalancedEc2Service",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The ECS service in this construct."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/load-balanced-ecs-service.ts",
            "line": 59
          },
          "name": "service",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.Ec2Service"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs-patterns.LoadBalancedEc2ServiceProps": {
      "assembly": "@aws-cdk/aws-ecs-patterns",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "The properties for the LoadBalancedEc2Service service."
      },
      "fqn": "@aws-cdk/aws-ecs-patterns.LoadBalancedEc2ServiceProps",
      "interfaces": [
        "@aws-cdk/aws-ecs-patterns.LoadBalancedServiceBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs/load-balanced-ecs-service.ts",
        "line": 8
      },
      "name": "LoadBalancedEc2ServiceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "none",
            "remarks": "This default is set in the underlying FargateTaskDefinition construct.",
            "stability": "experimental",
            "summary": "The number of cpu units used by the task. Valid values, which determines your range of valid values for the memory parameter: 256 (.25 vCPU) - Available memory values: 0.5GB, 1GB, 2GB 512 (.5 vCPU) - Available memory values: 1GB, 2GB, 3GB, 4GB 1024 (1 vCPU) - Available memory values: 2GB, 3GB, 4GB, 5GB, 6GB, 7GB, 8GB 2048 (2 vCPU) - Available memory values: Between 4GB and 16GB in 1GB increments 4096 (4 vCPU) - Available memory values: Between 8GB and 30GB in 1GB increments."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/load-balanced-ecs-service.ts",
            "line": 23
          },
          "name": "cpu",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No memory limit.",
            "remarks": "If your container attempts to exceed the allocated memory, the container\nis terminated.\n\nAt least one of memoryLimitMiB and memoryReservationMiB is required.",
            "stability": "experimental",
            "summary": "The hard limit (in MiB) of memory to present to the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/load-balanced-ecs-service.ts",
            "line": 34
          },
          "name": "memoryLimitMiB",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No memory reserved.",
            "remarks": "When system memory is under contention, Docker attempts to keep the\ncontainer memory within the limit. If the container requires more memory,\nit can consume up to the value specified by the Memory property or all of\nthe available memory on the container instance—whichever comes first.\n\nAt least one of memoryLimitMiB and memoryReservationMiB is required.",
            "stability": "experimental",
            "summary": "The soft limit (in MiB) of memory to reserve for the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/load-balanced-ecs-service.ts",
            "line": 48
          },
          "name": "memoryReservationMiB",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs-patterns.LoadBalancedFargateService": {
      "assembly": "@aws-cdk/aws-ecs-patterns",
      "base": "@aws-cdk/aws-ecs-patterns.LoadBalancedServiceBase",
      "docs": {
        "stability": "experimental",
        "summary": "A Fargate service running on an ECS cluster fronted by a load balancer."
      },
      "fqn": "@aws-cdk/aws-ecs-patterns.LoadBalancedFargateService",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Constructs a new instance of the LoadBalancedFargateService class."
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ecs-patterns.LoadBalancedFargateServiceProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/fargate/load-balanced-fargate-service.ts",
        "line": 50
      },
      "name": "LoadBalancedFargateService",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The Fargate service in this construct."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fargate/load-balanced-fargate-service.ts",
            "line": 55
          },
          "name": "service",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.FargateService"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs-patterns.LoadBalancedFargateServiceProps": {
      "assembly": "@aws-cdk/aws-ecs-patterns",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "The properties for the LoadBalancedFargateService service."
      },
      "fqn": "@aws-cdk/aws-ecs-patterns.LoadBalancedFargateServiceProps",
      "interfaces": [
        "@aws-cdk/aws-ecs-patterns.LoadBalancedServiceBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/fargate/load-balanced-fargate-service.ts",
        "line": 8
      },
      "name": "LoadBalancedFargateServiceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "256",
            "remarks": "This default is set in the underlying FargateTaskDefinition construct.",
            "stability": "experimental",
            "summary": "The number of cpu units used by the task. Valid values, which determines your range of valid values for the memory parameter: 256 (.25 vCPU) - Available memory values: 0.5GB, 1GB, 2GB 512 (.5 vCPU) - Available memory values: 1GB, 2GB, 3GB, 4GB 1024 (1 vCPU) - Available memory values: 2GB, 3GB, 4GB, 5GB, 6GB, 7GB, 8GB 2048 (2 vCPU) - Available memory values: Between 4GB and 16GB in 1GB increments 4096 (4 vCPU) - Available memory values: Between 8GB and 30GB in 1GB increments."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fargate/load-balanced-fargate-service.ts",
            "line": 22
          },
          "name": "cpu",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "512",
            "remarks": "This field is required and you must use one of the following values, which determines your range of valid values\nfor the cpu parameter:\n\n0.5GB, 1GB, 2GB - Available cpu values: 256 (.25 vCPU)\n\n1GB, 2GB, 3GB, 4GB - Available cpu values: 512 (.5 vCPU)\n\n2GB, 3GB, 4GB, 5GB, 6GB, 7GB, 8GB - Available cpu values: 1024 (1 vCPU)\n\nBetween 4GB and 16GB in 1GB increments - Available cpu values: 2048 (2 vCPU)\n\nBetween 8GB and 30GB in 1GB increments - Available cpu values: 4096 (4 vCPU)\n\nThis default is set in the underlying FargateTaskDefinition construct.",
            "stability": "experimental",
            "summary": "The amount (in MiB) of memory used by the task."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fargate/load-balanced-fargate-service.ts",
            "line": 44
          },
          "name": "memoryLimitMiB",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs-patterns.LoadBalancedServiceBase": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ecs-patterns",
      "base": "@aws-cdk/core.Construct",
      "docs": {
        "stability": "experimental",
        "summary": "The base class for LoadBalancedEc2Service and LoadBalancedFargateService services."
      },
      "fqn": "@aws-cdk/aws-ecs-patterns.LoadBalancedServiceBase",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Constructs a new instance of the LoadBalancedServiceBase class."
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ecs-patterns.LoadBalancedServiceBaseProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/base/load-balanced-service-base.ts",
        "line": 167
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/base/load-balanced-service-base.ts",
            "line": 268
          },
          "name": "addServiceAsTarget",
          "parameters": [
            {
              "name": "service",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.BaseService"
              }
            }
          ],
          "protected": true
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/base/load-balanced-service-base.ts",
            "line": 261
          },
          "name": "getDefaultCluster",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "vpc",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IVpc"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.Cluster"
            }
          }
        }
      ],
      "name": "LoadBalancedServiceBase",
      "properties": [
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/load-balanced-service-base.ts",
            "line": 168
          },
          "name": "assignPublicIp",
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/load-balanced-service-base.ts",
            "line": 180
          },
          "name": "cluster",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.ICluster"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/load-balanced-service-base.ts",
            "line": 170
          },
          "name": "desiredCount",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/load-balanced-service-base.ts",
            "line": 176
          },
          "name": "listener",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationListener"
                },
                {
                  "fqn": "@aws-cdk/aws-elasticloadbalancingv2.NetworkListener"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/load-balanced-service-base.ts",
            "line": 174
          },
          "name": "loadBalancer",
          "type": {
            "fqn": "@aws-cdk/aws-elasticloadbalancingv2.BaseLoadBalancer"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/load-balanced-service-base.ts",
            "line": 172
          },
          "name": "loadBalancerType",
          "type": {
            "fqn": "@aws-cdk/aws-ecs-patterns.LoadBalancerType"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/load-balanced-service-base.ts",
            "line": 178
          },
          "name": "targetGroup",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-elasticloadbalancingv2.ApplicationTargetGroup"
                },
                {
                  "fqn": "@aws-cdk/aws-elasticloadbalancingv2.NetworkTargetGroup"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/load-balanced-service-base.ts",
            "line": 182
          },
          "name": "logDriver",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.LogDriver"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs-patterns.LoadBalancedServiceBaseProps": {
      "assembly": "@aws-cdk/aws-ecs-patterns",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "The properties for the base LoadBalancedEc2Service or LoadBalancedFargateService service."
      },
      "fqn": "@aws-cdk/aws-ecs-patterns.LoadBalancedServiceBaseProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/base/load-balanced-service-base.ts",
        "line": 19
      },
      "name": "LoadBalancedServiceBaseProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The image to start."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/load-balanced-service-base.ts",
            "line": 39
          },
          "name": "image",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.ContainerImage"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No certificate associated with the load balancer.",
            "stability": "experimental",
            "summary": "Certificate Manager certificate to associate with the load balancer. Setting this option will set the load balancer port to 443."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/load-balanced-service-base.ts",
            "line": 75
          },
          "name": "certificate",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-certificatemanager.ICertificate"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- create a new cluster; if you do not specify a cluster nor a vpc, a new VPC will be created for you as well",
            "remarks": "Alternatively, you can leave both blank",
            "stability": "experimental",
            "summary": "The cluster where your service will be deployed You can only specify either vpc or cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/load-balanced-service-base.ts",
            "line": 26
          },
          "name": "cluster",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.ICluster"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No value",
            "stability": "experimental",
            "summary": "Override value for the container name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/load-balanced-service-base.ts",
            "line": 138
          },
          "name": "containerName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "80",
            "remarks": "Corresponds to container port mapping.",
            "stability": "experimental",
            "summary": "The container port of the application load balancer attached to your Fargate service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/load-balanced-service-base.ts",
            "line": 46
          },
          "name": "containerPort",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "1",
            "stability": "experimental",
            "summary": "Number of desired copies of running tasks."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/load-balanced-service-base.ts",
            "line": 60
          },
          "name": "desiredCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No domain name.",
            "stability": "experimental",
            "summary": "Domain name for the service, e.g. api.example.com."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/load-balanced-service-base.ts",
            "line": 110
          },
          "name": "domainName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No Route53 hosted domain zone.",
            "stability": "experimental",
            "summary": "Route53 hosted zone for the domain, e.g. \"example.com.\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/load-balanced-service-base.ts",
            "line": 117
          },
          "name": "domainZone",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-route53.IHostedZone"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Whether to create an AWS log driver."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/load-balanced-service-base.ts",
            "line": 96
          },
          "name": "enableLogging",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No environment variables.",
            "stability": "experimental",
            "summary": "Environment variables to pass to the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/load-balanced-service-base.ts",
            "line": 82
          },
          "name": "environment",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No value",
            "stability": "experimental",
            "summary": "Override for the Fargate Task Definition execution role."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/load-balanced-service-base.ts",
            "line": 124
          },
          "name": "executionRole",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- defaults to 60 seconds if at least one load balancer is in-use and it is not already set",
            "stability": "experimental",
            "summary": "The period of time, in seconds, that the Amazon ECS service scheduler ignores unhealthy Elastic Load Balancing target health checks after a task has first started."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/load-balanced-service-base.ts",
            "line": 160
          },
          "name": "healthCheckGracePeriod",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "application",
            "stability": "experimental",
            "summary": "Whether to create an application load balancer or a network load balancer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/load-balanced-service-base.ts",
            "line": 67
          },
          "name": "loadBalancerType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs-patterns.LoadBalancerType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- AwsLogDriver if enableLogging is true",
            "stability": "experimental",
            "summary": "The LogDriver to use for logging."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/load-balanced-service-base.ts",
            "line": 152
          },
          "name": "logDriver",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.LogDriver"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Determines whether the Application Load Balancer will be internet-facing."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/load-balanced-service-base.ts",
            "line": 53
          },
          "name": "publicLoadBalancer",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "experimental",
            "summary": "Determines whether your Fargate Service will be assigned a public IP address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/load-balanced-service-base.ts",
            "line": 103
          },
          "name": "publicTasks",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No secret environment variables.",
            "stability": "experimental",
            "summary": "Secret environment variables to pass to the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/load-balanced-service-base.ts",
            "line": 89
          },
          "name": "secrets",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ecs.Secret"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "CloudFormation-generated name",
            "stability": "experimental",
            "summary": "Override value for the service name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/load-balanced-service-base.ts",
            "line": 145
          },
          "name": "serviceName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No value",
            "stability": "experimental",
            "summary": "Override for the Fargate Task Definition task role."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/load-balanced-service-base.ts",
            "line": 131
          },
          "name": "taskRole",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- use vpc of cluster or create a new one",
            "remarks": "Alternatively, you can leave both blank",
            "stability": "experimental",
            "summary": "VPC that the cluster instances or tasks are running in You can only specify either vpc or cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/load-balanced-service-base.ts",
            "line": 34
          },
          "name": "vpc",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs-patterns.LoadBalancerType": {
      "assembly": "@aws-cdk/aws-ecs-patterns",
      "docs": {
        "stability": "experimental"
      },
      "fqn": "@aws-cdk/aws-ecs-patterns.LoadBalancerType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/base/load-balanced-service-base.ts",
        "line": 11
      },
      "members": [
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "APPLICATION"
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "name": "NETWORK"
        }
      ],
      "name": "LoadBalancerType"
    },
    "@aws-cdk/aws-ecs-patterns.QueueProcessingEc2Service": {
      "assembly": "@aws-cdk/aws-ecs-patterns",
      "base": "@aws-cdk/aws-ecs-patterns.QueueProcessingServiceBase",
      "docs": {
        "stability": "experimental",
        "summary": "Class to create a queue processing Ec2 service."
      },
      "fqn": "@aws-cdk/aws-ecs-patterns.QueueProcessingEc2Service",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Constructs a new instance of the QueueProcessingEc2Service class."
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ecs-patterns.QueueProcessingEc2ServiceProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ecs/queue-processing-ecs-service.ts",
        "line": 46
      },
      "name": "QueueProcessingEc2Service",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The ECS service in this construct."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/queue-processing-ecs-service.ts",
            "line": 51
          },
          "name": "service",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.Ec2Service"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs-patterns.QueueProcessingEc2ServiceProps": {
      "assembly": "@aws-cdk/aws-ecs-patterns",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "The properties for the QueueProcessingEc2Service service."
      },
      "fqn": "@aws-cdk/aws-ecs-patterns.QueueProcessingEc2ServiceProps",
      "interfaces": [
        "@aws-cdk/aws-ecs-patterns.QueueProcessingServiceBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs/queue-processing-ecs-service.ts",
        "line": 8
      },
      "name": "QueueProcessingEc2ServiceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No minimum CPU units reserved.",
            "stability": "experimental",
            "summary": "The minimum number of CPU units to reserve for the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/queue-processing-ecs-service.ts",
            "line": 14
          },
          "name": "cpu",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No memory limit.",
            "remarks": "If your container attempts to exceed the allocated memory, the container\nis terminated.\n\nAt least one of memoryLimitMiB and memoryReservationMiB is required for non-Fargate services.",
            "stability": "experimental",
            "summary": "The hard limit (in MiB) of memory to present to the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/queue-processing-ecs-service.ts",
            "line": 26
          },
          "name": "memoryLimitMiB",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No memory reserved.",
            "remarks": "When system memory is under contention, Docker attempts to keep the\ncontainer memory within the limit. If the container requires more memory,\nit can consume up to the value specified by the Memory property or all of\nthe available memory on the container instance—whichever comes first.\n\nAt least one of memoryLimitMiB and memoryReservationMiB is required for non-Fargate services.",
            "stability": "experimental",
            "summary": "The soft limit (in MiB) of memory to reserve for the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/queue-processing-ecs-service.ts",
            "line": 40
          },
          "name": "memoryReservationMiB",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs-patterns.QueueProcessingFargateService": {
      "assembly": "@aws-cdk/aws-ecs-patterns",
      "base": "@aws-cdk/aws-ecs-patterns.QueueProcessingServiceBase",
      "docs": {
        "stability": "experimental",
        "summary": "Class to create a queue processing Fargate service."
      },
      "fqn": "@aws-cdk/aws-ecs-patterns.QueueProcessingFargateService",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Constructs a new instance of the QueueProcessingFargateService class."
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ecs-patterns.QueueProcessingFargateServiceProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/fargate/queue-processing-fargate-service.ts",
        "line": 50
      },
      "name": "QueueProcessingFargateService",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The Fargate service in this construct."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fargate/queue-processing-fargate-service.ts",
            "line": 54
          },
          "name": "service",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.FargateService"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs-patterns.QueueProcessingFargateServiceProps": {
      "assembly": "@aws-cdk/aws-ecs-patterns",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "The properties for the QueueProcessingFargateService service."
      },
      "fqn": "@aws-cdk/aws-ecs-patterns.QueueProcessingFargateServiceProps",
      "interfaces": [
        "@aws-cdk/aws-ecs-patterns.QueueProcessingServiceBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/fargate/queue-processing-fargate-service.ts",
        "line": 8
      },
      "name": "QueueProcessingFargateServiceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "256",
            "remarks": "This default is set in the underlying FargateTaskDefinition construct.",
            "stability": "experimental",
            "summary": "The number of cpu units used by the task. Valid values, which determines your range of valid values for the memory parameter: 256 (.25 vCPU) - Available memory values: 0.5GB, 1GB, 2GB 512 (.5 vCPU) - Available memory values: 1GB, 2GB, 3GB, 4GB 1024 (1 vCPU) - Available memory values: 2GB, 3GB, 4GB, 5GB, 6GB, 7GB, 8GB 2048 (2 vCPU) - Available memory values: Between 4GB and 16GB in 1GB increments 4096 (4 vCPU) - Available memory values: Between 8GB and 30GB in 1GB increments."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fargate/queue-processing-fargate-service.ts",
            "line": 22
          },
          "name": "cpu",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "512",
            "remarks": "This field is required and you must use one of the following values, which determines your range of valid values\nfor the cpu parameter:\n\n0.5GB, 1GB, 2GB - Available cpu values: 256 (.25 vCPU)\n\n1GB, 2GB, 3GB, 4GB - Available cpu values: 512 (.5 vCPU)\n\n2GB, 3GB, 4GB, 5GB, 6GB, 7GB, 8GB - Available cpu values: 1024 (1 vCPU)\n\nBetween 4GB and 16GB in 1GB increments - Available cpu values: 2048 (2 vCPU)\n\nBetween 8GB and 30GB in 1GB increments - Available cpu values: 4096 (4 vCPU)\n\nThis default is set in the underlying FargateTaskDefinition construct.",
            "stability": "experimental",
            "summary": "The amount (in MiB) of memory used by the task."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fargate/queue-processing-fargate-service.ts",
            "line": 44
          },
          "name": "memoryLimitMiB",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs-patterns.QueueProcessingServiceBase": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ecs-patterns",
      "base": "@aws-cdk/core.Construct",
      "docs": {
        "stability": "experimental",
        "summary": "The base class for QueueProcessingEc2Service and QueueProcessingFargateService services."
      },
      "fqn": "@aws-cdk/aws-ecs-patterns.QueueProcessingServiceBase",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Constructs a new instance of the QueueProcessingServiceBase class."
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ecs-patterns.QueueProcessingServiceBaseProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/base/queue-processing-service-base.ts",
        "line": 114
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Configure autoscaling based off of CPU utilization as well as the number of messages visible in the SQS queue."
          },
          "locationInModule": {
            "filename": "lib/base/queue-processing-service-base.ts",
            "line": 200
          },
          "name": "configureAutoscalingForService",
          "parameters": [
            {
              "docs": {
                "summary": "the ECS/Fargate service for which to apply the autoscaling rules to."
              },
              "name": "service",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.BaseService"
              }
            }
          ],
          "protected": true
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "locationInModule": {
            "filename": "lib/base/queue-processing-service-base.ts",
            "line": 211
          },
          "name": "getDefaultCluster",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "vpc",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IVpc"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.Cluster"
            }
          }
        }
      ],
      "name": "QueueProcessingServiceBase",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The cluster where your service will be deployed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/queue-processing-service-base.ts",
            "line": 123
          },
          "name": "cluster",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.ICluster"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The minimum number of tasks to run."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/queue-processing-service-base.ts",
            "line": 141
          },
          "name": "desiredCount",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Environment variables that will include the queue name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/queue-processing-service-base.ts",
            "line": 131
          },
          "name": "environment",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The maximum number of instances for autoscaling to scale up to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/queue-processing-service-base.ts",
            "line": 146
          },
          "name": "maxCapacity",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The scaling interval for autoscaling based off an SQS Queue size."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/queue-processing-service-base.ts",
            "line": 151
          },
          "name": "scalingSteps",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-applicationautoscaling.ScalingInterval"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The SQS queue that the service will process from."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/queue-processing-service-base.ts",
            "line": 118
          },
          "name": "sqsQueue",
          "type": {
            "fqn": "@aws-cdk/aws-sqs.IQueue"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The AwsLogDriver to use for logging if logging is enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/queue-processing-service-base.ts",
            "line": 155
          },
          "name": "logDriver",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.LogDriver"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Secret environment variables."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/queue-processing-service-base.ts",
            "line": 136
          },
          "name": "secrets",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ecs.Secret"
              },
              "kind": "map"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs-patterns.QueueProcessingServiceBaseProps": {
      "assembly": "@aws-cdk/aws-ecs-patterns",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "The properties for the base QueueProcessingEc2Service or QueueProcessingFargateService service."
      },
      "fqn": "@aws-cdk/aws-ecs-patterns.QueueProcessingServiceBaseProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/base/queue-processing-service-base.ts",
        "line": 10
      },
      "name": "QueueProcessingServiceBaseProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "This string is passed directly to the Docker daemon.\nImages in the Docker Hub registry are available by default.\nOther repositories are specified with either repository-url/image:tag or repository-url/image@digest.",
            "stability": "experimental",
            "summary": "The image used to start a container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/queue-processing-service-base.ts",
            "line": 34
          },
          "name": "image",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.ContainerImage"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- create a new cluster; if you do not specify a cluster nor a vpc, a new VPC will be created for you as well",
            "remarks": "Alternatively, you can leave both blank",
            "stability": "experimental",
            "summary": "The cluster where your service will be deployed You can only specify either vpc or cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/queue-processing-service-base.ts",
            "line": 17
          },
          "name": "cluster",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.ICluster"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- CMD value built into container image.",
            "remarks": "If you provide a shell command as a single string, you have to quote command-line arguments.",
            "stability": "experimental",
            "summary": "The command that is passed to the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/queue-processing-service-base.ts",
            "line": 43
          },
          "name": "command",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "1",
            "stability": "experimental",
            "summary": "The desired number of instantiations of the task definition to keep running on the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/queue-processing-service-base.ts",
            "line": 50
          },
          "name": "desiredTaskCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Flag to indicate whether to enable logging."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/queue-processing-service-base.ts",
            "line": 57
          },
          "name": "enableLogging",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'QUEUE_NAME: queue.queueName'",
            "remarks": "The variable `QUEUE_NAME` with value `queue.queueName` will\nalways be passed.",
            "stability": "experimental",
            "summary": "The environment variables to pass to the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/queue-processing-service-base.ts",
            "line": 67
          },
          "name": "environment",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "AwsLogDriver if enableLogging is true",
            "stability": "experimental",
            "summary": "The LogDriver to use for logging."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/queue-processing-service-base.ts",
            "line": 108
          },
          "name": "logDriver",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.LogDriver"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "(desiredTaskCount * 2)",
            "stability": "experimental",
            "summary": "Maximum capacity to scale to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/queue-processing-service-base.ts",
            "line": 91
          },
          "name": "maxScalingCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'SQSQueue with CloudFormation-generated name'",
            "remarks": "If specified and this is a FIFO queue, the queue name must end in the string '.fifo'.",
            "see": "https://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/API_CreateQueue.html",
            "stability": "experimental",
            "summary": "A queue for which to process items from."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/queue-processing-service-base.ts",
            "line": 84
          },
          "name": "queue",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-sqs.IQueue"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "[{ upper: 0, change: -1 },{ lower: 100, change: +1 },{ lower: 500, change: +5 }]",
            "remarks": "Maps a range of metric values to a particular scaling behavior.\nhttps://docs.aws.amazon.com/autoscaling/ec2/userguide/as-scaling-simple-step.html",
            "stability": "experimental",
            "summary": "The intervals for scaling based on the SQS queue's ApproximateNumberOfMessagesVisible metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/queue-processing-service-base.ts",
            "line": 101
          },
          "name": "scalingSteps",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-applicationautoscaling.ScalingInterval"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No secret environment variables.",
            "stability": "experimental",
            "summary": "Secret environment variables to pass to the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/queue-processing-service-base.ts",
            "line": 74
          },
          "name": "secrets",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ecs.Secret"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- use vpc of cluster or create a new one",
            "remarks": "Alternatively, you can leave both blank",
            "stability": "experimental",
            "summary": "VPC that the cluster instances or tasks are running in You can only specify either vpc or cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/queue-processing-service-base.ts",
            "line": 25
          },
          "name": "vpc",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs-patterns.ScheduledEc2Task": {
      "assembly": "@aws-cdk/aws-ecs-patterns",
      "base": "@aws-cdk/aws-ecs-patterns.ScheduledTaskBase",
      "docs": {
        "stability": "experimental",
        "summary": "A scheduled Ec2 task that will be initiated off of cloudwatch events."
      },
      "fqn": "@aws-cdk/aws-ecs-patterns.ScheduledEc2Task",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Constructs a new instance of the ScheduledEc2Task class."
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ecs-patterns.ScheduledEc2TaskProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ecs/scheduled-ecs-task.ts",
        "line": 46
      },
      "name": "ScheduledEc2Task",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The ECS service in this construct."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/scheduled-ecs-task.ts",
            "line": 51
          },
          "name": "taskDefinition",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.Ec2TaskDefinition"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs-patterns.ScheduledEc2TaskProps": {
      "assembly": "@aws-cdk/aws-ecs-patterns",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "The properties for the ScheduledEc2Task task."
      },
      "fqn": "@aws-cdk/aws-ecs-patterns.ScheduledEc2TaskProps",
      "interfaces": [
        "@aws-cdk/aws-ecs-patterns.ScheduledTaskBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs/scheduled-ecs-task.ts",
        "line": 8
      },
      "name": "ScheduledEc2TaskProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "none",
            "stability": "experimental",
            "summary": "The minimum number of CPU units to reserve for the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/scheduled-ecs-task.ts",
            "line": 14
          },
          "name": "cpu",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No memory limit.",
            "remarks": "If your container attempts to exceed the allocated memory, the container\nis terminated.\n\nAt least one of memoryLimitMiB and memoryReservationMiB is required for non-Fargate services.",
            "stability": "experimental",
            "summary": "The hard limit (in MiB) of memory to present to the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/scheduled-ecs-task.ts",
            "line": 26
          },
          "name": "memoryLimitMiB",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No memory reserved.",
            "remarks": "When system memory is under contention, Docker attempts to keep the\ncontainer memory within the limit. If the container requires more memory,\nit can consume up to the value specified by the Memory property or all of\nthe available memory on the container instance—whichever comes first.\n\nAt least one of memoryLimitMiB and memoryReservationMiB is required for non-Fargate services.",
            "stability": "experimental",
            "summary": "The soft limit (in MiB) of memory to reserve for the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/scheduled-ecs-task.ts",
            "line": 40
          },
          "name": "memoryReservationMiB",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs-patterns.ScheduledFargateTask": {
      "assembly": "@aws-cdk/aws-ecs-patterns",
      "base": "@aws-cdk/aws-ecs-patterns.ScheduledTaskBase",
      "docs": {
        "stability": "experimental",
        "summary": "A scheduled Fargate task that will be initiated off of cloudwatch events."
      },
      "fqn": "@aws-cdk/aws-ecs-patterns.ScheduledFargateTask",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Constructs a new instance of the ScheduledFargateTask class."
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ecs-patterns.ScheduledFargateTaskProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/fargate/scheduled-fargate-task.ts",
        "line": 38
      },
      "name": "ScheduledFargateTask",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The ECS service in this construct."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fargate/scheduled-fargate-task.ts",
            "line": 42
          },
          "name": "taskDefinition",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.FargateTaskDefinition"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs-patterns.ScheduledFargateTaskProps": {
      "assembly": "@aws-cdk/aws-ecs-patterns",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "The properties for the ScheduledFargateTask service."
      },
      "fqn": "@aws-cdk/aws-ecs-patterns.ScheduledFargateTaskProps",
      "interfaces": [
        "@aws-cdk/aws-ecs-patterns.ScheduledTaskBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/fargate/scheduled-fargate-task.ts",
        "line": 8
      },
      "name": "ScheduledFargateTaskProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "256",
            "remarks": "This default is set in the underlying FargateTaskDefinition construct.",
            "stability": "experimental",
            "summary": "The number of cpu units used by the task. Valid values, which determines your range of valid values for the memory parameter: 256 (.25 vCPU) - Available memory values: 0.5GB, 1GB, 2GB 512 (.5 vCPU) - Available memory values: 1GB, 2GB, 3GB, 4GB 1024 (1 vCPU) - Available memory values: 2GB, 3GB, 4GB, 5GB, 6GB, 7GB, 8GB 2048 (2 vCPU) - Available memory values: Between 4GB and 16GB in 1GB increments 4096 (4 vCPU) - Available memory values: Between 8GB and 30GB in 1GB increments."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fargate/scheduled-fargate-task.ts",
            "line": 22
          },
          "name": "cpu",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "512",
            "remarks": "If your container attempts to exceed the allocated memory, the container\nis terminated.",
            "stability": "experimental",
            "summary": "The hard limit (in MiB) of memory to present to the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/fargate/scheduled-fargate-task.ts",
            "line": 32
          },
          "name": "memoryLimitMiB",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs-patterns.ScheduledTaskBase": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ecs-patterns",
      "base": "@aws-cdk/core.Construct",
      "docs": {
        "stability": "experimental",
        "summary": "The base class for ScheduledEc2Task and ScheduledFargateTask tasks."
      },
      "fqn": "@aws-cdk/aws-ecs-patterns.ScheduledTaskBase",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Constructs a new instance of the ScheduledTaskBase class."
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-ecs-patterns.ScheduledTaskBaseProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/base/scheduled-task-base.ts",
        "line": 75
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Create an ECS task using the task definition provided and add it to the scheduled event rule."
          },
          "locationInModule": {
            "filename": "lib/base/scheduled-task-base.ts",
            "line": 114
          },
          "name": "addTaskDefinitionToEventTarget",
          "parameters": [
            {
              "docs": {
                "summary": "the TaskDefinition to add to the event rule."
              },
              "name": "taskDefinition",
              "type": {
                "fqn": "@aws-cdk/aws-ecs.TaskDefinition"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-events-targets.EcsTask"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Create an AWS Log Driver with the provided streamPrefix."
          },
          "locationInModule": {
            "filename": "lib/base/scheduled-task-base.ts",
            "line": 132
          },
          "name": "createAWSLogDriver",
          "parameters": [
            {
              "docs": {
                "summary": "the Cloudwatch logging prefix."
              },
              "name": "prefix",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecs.AwsLogDriver"
            }
          }
        }
      ],
      "name": "ScheduledTaskBase",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The name of the cluster that hosts the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/scheduled-task-base.ts",
            "line": 79
          },
          "name": "cluster",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.ICluster"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The desired number of instantiations of the task definition to keep running on the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/scheduled-task-base.ts",
            "line": 83
          },
          "name": "desiredTaskCount",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "experimental"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/scheduled-task-base.ts",
            "line": 84
          },
          "name": "eventRule",
          "type": {
            "fqn": "@aws-cdk/aws-events.Rule"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The AwsLogDriver to use for logging if logging is enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/scheduled-task-base.ts",
            "line": 88
          },
          "name": "logDriver",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.LogDriver"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecs-patterns.ScheduledTaskBaseProps": {
      "assembly": "@aws-cdk/aws-ecs-patterns",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "The properties for the base ScheduledEc2Task or ScheduledFargateTask task."
      },
      "fqn": "@aws-cdk/aws-ecs-patterns.ScheduledTaskBaseProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/base/scheduled-task-base.ts",
        "line": 10
      },
      "name": "ScheduledTaskBaseProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The name of the cluster that hosts the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/scheduled-task-base.ts",
            "line": 14
          },
          "name": "cluster",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.ICluster"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This string is passed directly to the Docker daemon.\nImages in the Docker Hub registry are available by default.\nOther repositories are specified with either repository-url/image:tag or repository-url/image@digest.",
            "stability": "experimental",
            "summary": "The image used to start a container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/scheduled-task-base.ts",
            "line": 23
          },
          "name": "image",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.ContainerImage"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "For more information, see Schedule Expression Syntax for\nRules in the Amazon CloudWatch User Guide.",
            "see": "http://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html",
            "stability": "experimental",
            "summary": "The schedule or rate (frequency) that determines when CloudWatch Events runs the rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/scheduled-task-base.ts",
            "line": 32
          },
          "name": "schedule",
          "type": {
            "fqn": "@aws-cdk/aws-applicationautoscaling.Schedule"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- CMD value built into container image.",
            "remarks": "If you provide a shell command as a single string, you have to quote command-line arguments.",
            "stability": "experimental",
            "summary": "The command that is passed to the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/scheduled-task-base.ts",
            "line": 41
          },
          "name": "command",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "1",
            "stability": "experimental",
            "summary": "The desired number of instantiations of the task definition to keep running on the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/scheduled-task-base.ts",
            "line": 48
          },
          "name": "desiredTaskCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "none",
            "stability": "experimental",
            "summary": "The environment variables to pass to the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/scheduled-task-base.ts",
            "line": 55
          },
          "name": "environment",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "AwsLogDriver if enableLogging is true",
            "stability": "experimental",
            "summary": "The LogDriver to use for logging."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/scheduled-task-base.ts",
            "line": 69
          },
          "name": "logDriver",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.LogDriver"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No secret environment variables.",
            "stability": "experimental",
            "summary": "Secret environment variables to pass to the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/base/scheduled-task-base.ts",
            "line": 62
          },
          "name": "secrets",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ecs.Secret"
              },
              "kind": "map"
            }
          }
        }
      ]
    }
  },
  "version": "1.4.0",
  "fingerprint": "EE+VjOsVCjAD0nRrCfuV0DJHHDiwCx2KG6uKacHThLY="
}
